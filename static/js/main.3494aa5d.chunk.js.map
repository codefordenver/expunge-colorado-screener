{"version":3,"sources":["data/survey.js","Components/SurveyComponent.js","hooks/useLocalStorage.js","index.js"],"names":["Survey","Instance","register","params","waitingPeriod","completedDate","Date","dateYear","getFullYear","setFullYear","now","F4","F5","F6","DF3","DF4","M1","DF2","SURVEY_DATA","title","clearInvisibleValues","triggers","type","expression","setToName","setValue","pages","name","questions","choices","isRequired","visibleIf","inputType","myCss","navigationButton","header","container","Outcome","SurveyComponent","surveyModel","version","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","useLocalStorage","cache","setCache","outcome","setOutcome","useEffect","data","currentPageNo","css","model","onValueChanged","onComplete","survey","onClick","clear","className","shaObj","jsSHA","update","hash","getHash","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3494aa5d.chunk.js","sourcesContent":["import * as Survey from 'survey-react';\n\nfunction hasEnoughTimePassed(params) {\n    if (params[1]) {\n        let waitingPeriod = params[0];\n        let completedDate = new Date(params[1]);\n        let dateYear = completedDate.getFullYear() + waitingPeriod;\n        let eligibleDate = completedDate.setFullYear(dateYear);\n        if (eligibleDate < Date.now()) {\n            return 'Yes';\n        } else {\n            return 'No';\n        }\n    }\n}\n\nfunction chargeEligibility(params) {\n    let charge = params[0];\n    const chargesMap = {\n        'Class 1 Felony': 'Ineligible',\n        'Class 2 Felony': 'Ineligible',\n        'Class 3 Felony': 'Ineligible',\n        'Class 1 Drug Felony': 'Ineligible',\n        'Felony Sex Offense': 'Ineligible',\n        'Felony Drug Special Offense': 'Ineligible',\n        'Felony Child Abuse': 'Ineligible',\n        'Felony Domestic Violence': 'Ineligible',\n        'Felony Murder or Manslaughter': 'Ineligible',\n        'Felony Vehicular Homicide or Assault': 'Ineligible',\n        'Felony Menacing': 'Ineligible',\n        'Felony First or Second Degree Kidnapping': 'Ineligible',\n        'Felony Robbery': 'Ineligible',\n        'Felony First or Second Degree Burglary of a Dwelling': 'Ineligible',\n        'Felony Retaliating or Intimidating a Witness or Victim': 'Ineligible',\n        'Misdemeanor Traffic Offense': 'Ineligible',\n        'DUI or DWAI': 'Ineligible',\n        'Petty Offense': 1,\n        'Petty Drug Offense': 1,\n        'Class 2 Misdemeanor': 2,\n        'Class 3 Misdemeanor': 2,\n        'Drug Misdemeanor Offense': 2,\n        F4: 3,\n        F5: 3,\n        F6: 3,\n        DF3: 3,\n        DF4: 3,\n        M1: 3,\n        'Municipal Offense': 3,\n        DF2: 5,\n        'Not Sure': 'Not Sure',\n    };\n\n    return chargesMap[charge];\n}\n\nSurvey.FunctionFactory.Instance.register('hasEnoughTimePassed', hasEnoughTimePassed);\nSurvey.FunctionFactory.Instance.register('chargeEligibility', chargeEligibility);\n\nconst SURVEY_DATA = {\n    title: 'Tell us some more about your case.',\n    clearInvisibleValues: 'onHidden',\n    triggers: [\n        {\n            type: 'setvalue',\n            expression:\n                \"{coloradoArrest} = 'No' or {over18} = 'No' or {federalCase} = 'Yes' or chargeEligibility({chargeToSeal}) = 'Ineligible' or {completedSentencing} = 'No' or hasEnoughTimePassed(chargeEligibility({chargeToSeal}), {enoughTimePassed}) = 'No' or {paidRestitutionAndFees} = 'No' or {attemptedToSeal} = 'Yes'\",\n            setToName: 'outcome',\n            setValue: 'ineligible',\n        },\n        {\n            type: 'setvalue',\n            expression:\n                \"{sealingArrestRecordOnly} = 'Yes' or {chargeDismissedOrAcquitted} = 'Yes' or {anyNewOffense} = 'No'\",\n            setToName: 'outcome',\n            setValue: 'eligible',\n        },\n        {\n            type: 'setvalue',\n            expression:\n                \"{federalCase} = 'Not Sure' or {chargeToSeal} = 'Not Sure' or {completedSentencing} = 'Not Sure' or {chargeDismissedOrAcquitted} = 'Not Sure' or {paidRestitutionAndFees} = 'Not Sure' or {anyNewOffense} = 'Yes' or {anyNewOffense} = 'Not Sure'\",\n            setToName: 'outcome',\n            setValue: 'needInfo',\n        },\n    ],\n    pages: [\n        {\n            name: 'preliminaryQuestions',\n            questions: [\n                {\n                    type: 'radiogroup',\n                    choices: ['Yes', 'No'],\n                    isRequired: true,\n                    name: 'coloradoArrest',\n                    title: 'Did your arrest or charge take place in Colorado?',\n                },\n                {\n                    type: 'radiogroup',\n                    choices: ['Yes', 'No'],\n                    isRequired: true,\n                    name: 'over18',\n                    title: 'Were you over 18 at the time of the arrest or charge?',\n                    visibleIf: \"{coloradoArrest} = 'Yes'\",\n                },\n                {\n                    type: 'radiogroup',\n                    choices: ['Yes', 'No', 'Not Sure'],\n                    isRequired: true,\n                    name: 'federalCase',\n                    title: 'Was your case a federal case?',\n                    visibleIf: \"{over18} = 'Yes'\",\n                },\n            ],\n        },\n        {\n            name: 'sealingArrestsAndCharges',\n            visibleIf: \"{federalCase} = 'No'\",\n            questions: [\n                {\n                    type: 'radiogroup',\n                    choices: ['Yes', 'No'],\n                    isRequired: true,\n                    name: 'sealingArrestRecordOnly',\n                    title:\n                        'Were you arrested, but not charged & seeking to seal arrest record only?',\n                },\n                {\n                    type: 'radiogroup',\n                    choices: ['Yes', 'No', 'Not Sure'],\n                    isRequired: true,\n                    name: 'chargeDismissedOrAcquitted',\n                    title:\n                        'Were all charges in your case dismissed or were you acquitted (found not guilty)?',\n                    visibleIf: \"{sealingArrestRecordOnly} = 'No'\",\n                },\n                {\n                    type: 'dropdown',\n                    choices: [\n                        'Class 1 Felony',\n                        'Class 2 Felony',\n                        'Class 3 Felony',\n                        'Class 1 Drug Felony',\n                        'Felony Sex Offense',\n                        'Felony Drug Special Offense',\n                        'Felony Child Abuse',\n                        'Felony Domestic Violence',\n                        'Felony Murder or Manslaughter',\n                        'Felony Vehicular Homicide or Assault',\n                        'Felony Menacing',\n                        'Felony First or Second Degree Kidnapping',\n                        'Felony Robbery',\n                        'Felony First or Second Degree Burglary of a Dwelling',\n                        'Felony Retaliating or Intimidating a Witness or Victim',\n                        'Misdemeanor Traffic Offense',\n                        'DUI or DWAI',\n                        'Petty Offense',\n                        'Petty Drug Offense',\n                        'Class 2 Misdemeanor',\n                        'Class 3 Misdemeanor',\n                        'Drug Misdemeanor Offense',\n                        'F4',\n                        'F5',\n                        'F6',\n                        'DF3',\n                        'DF4',\n                        'M1',\n                        'Municipal Offense',\n                        'DF2',\n                        'Not Sure',\n                    ],\n                    isRequired: true,\n                    name: 'chargeToSeal',\n                    title: 'What conviction are you looking to seal?',\n                    visibleIf: \"{chargeDismissedOrAcquitted} = 'No'\",\n                },\n            ],\n        },\n        {\n            name: 'convictionRequirements',\n            visibleIf: 'chargeEligibility({chargeToSeal}) > 0',\n            questions: [\n                {\n                    type: 'radiogroup',\n                    choices: ['Yes', 'No', 'Not Sure'],\n                    isRequired: true,\n                    name: 'completedSentencing',\n                    title:\n                        'If you were sentenced at the end of your case, have you completed all sentencing, including supervised or unsupervised probation, parole, community corrections, incarceration, etc?',\n                },\n                {\n                    type: 'text',\n                    inputType: 'date',\n                    isRequired: true,\n                    name: 'enoughTimePassed',\n                    title:\n                        'In most cases, a certain period of time must go by from the date of conviction, or the final date of completing a sentence, before you can apply to seal your record. What is the month & year you completed your sentencing/supervision?',\n                    visibleIf: \"{completedSentencing} = 'Yes'\",\n                },\n            ],\n        },\n        {\n            name: 'withinTimeFrame',\n            visibleIf:\n                \"hasEnoughTimePassed(chargeEligibility({chargeToSeal}), {enoughTimePassed}) = 'Yes'\",\n            questions: [\n                {\n                    type: 'radiogroup',\n                    choices: ['Yes', 'No', 'Not Sure'],\n                    isRequired: true,\n                    name: 'paidRestitutionAndFees',\n                    title:\n                        'Have you paid all restitution, fines, court costs, late fees or other fees ordered by the Court in your case?',\n                },\n                {\n                    type: 'radiogroup',\n                    choices: ['Yes', 'No', 'Not Sure'],\n                    isRequired: true,\n                    name: 'attemptedToSeal',\n                    title:\n                        'Have you attempted to seal your record for this conviction within the past 12 months?',\n                    visibleIf: \"{paidRestitutionAndFees} = 'Yes'\",\n                },\n                {\n                    type: 'radiogroup',\n                    choices: ['Yes', 'No', 'Not Sure'],\n                    isRequired: true,\n                    name: 'anyNewOffense',\n                    title:\n                        'Have you been convicted of or charged with another offense after the conviction you are trying to seal?',\n                    visibleIf: \"{attemptedToSeal} = 'No'\",\n                },\n            ],\n        },\n    ],\n};\n\nexport default SURVEY_DATA;\n","import React, { useState, useEffect } from 'react';\nimport * as Survey from 'survey-react';\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nconst myCss = {\n    navigationButton: 'btn-nav',\n    header: 'header',\n    container: 'container',\n};\n\nfunction SurveyComponent({ surveyModel, version }) {\n    const [cache, setCache] = useLocalStorage('surveyCache', null);\n    const [outcome, setOutcome] = useState('');\n\n    useEffect(() => {\n        if (cache?.version === version) {\n            surveyModel.data = cache.data;\n            surveyModel.currentPageNo = cache.currentPageNo;\n        } else {\n            setCache({ version });\n        }\n    }, []);\n\n    function handleComplete(survey) {\n        setOutcome(survey.data.outcome);\n        setCache(null);\n    }\n\n    function persistDataToLocalStorage({ currentPageNo, data }) {\n        setCache({ ...cache, currentPageNo, data });\n    }\n\n    /* TODO/fix: if this is called *after* completing the survey,\n       it resets everything except for question visibility on page 0\n       (but corrects itself as soon as you try to select something) */\n    function reset() {\n        surveyModel.clear();\n        setCache(null);\n        setOutcome(null);\n    }\n\n    return (\n        <div>\n            {!outcome ? (\n                <Survey.Survey\n                    css={myCss}\n                    model={surveyModel}\n                    onValueChanged={persistDataToLocalStorage}\n                    onComplete={handleComplete}\n                />\n            ) : (\n                <Outcome type={outcome} />\n            )}\n            <button onClick={reset} className=\"btn-nav\">\n                Reset\n            </button>\n        </div>\n    );\n}\n\nconst Outcome = ({ type }) => {\n    switch (type) {\n        case 'eligible':\n            return (\n                <div>\n                    <h2>You are eligible!</h2>\n                    <div>blah blah blah</div>\n                </div>\n            );\n        case 'needInfo':\n            return (\n                <div>\n                    <h2>Need more info</h2>\n                    <div>go here ask this ....</div>\n                </div>\n            );\n        case 'ineligible':\n            return (\n                <div>\n                    <h2>Sorry not eligible</h2>\n                    <div>here are resources</div>\n                </div>\n            );\n        default:\n            return null;\n    }\n};\n\nexport default SurveyComponent;\n","import { useState } from 'react';\n\nexport default function useLocalStorage(key, initialValue) {\n    const [storedValue, setStoredValue] = useState(() => {\n        try {\n            const item = window.localStorage.getItem(key);\n            return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n            console.log(error);\n            return initialValue;\n        }\n    });\n\n    const setValue = (value) => {\n        try {\n            const valueToStore = value instanceof Function ? value(storedValue) : value;\n            setStoredValue(valueToStore);\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    return [storedValue, setValue];\n}\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport jsSHA from 'jssha';\nimport * as Survey from 'survey-react';\nimport SURVEY_DATA from './data/survey.js';\nimport SurveyComponent from './Components/SurveyComponent';\nimport './App.scss';\n\nconst surveyModel = new Survey.Model(SURVEY_DATA);\n\n// for debugging only\n// window.survey = surveyModel;\n\n// create survey version # by hashing stringified survey data\nconst shaObj = new jsSHA('SHA-1', 'TEXT');\nshaObj.update(JSON.stringify(SURVEY_DATA));\nconst hash = shaObj.getHash('HEX');\n\nReactDOM.render(\n    <React.StrictMode>\n        <div className=\"app\">\n            <h1>Expunge Colorado Screener</h1>\n            <div className=\"center-me\">\n                <SurveyComponent surveyModel={surveyModel} version={hash} />\n            </div>\n        </div>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}